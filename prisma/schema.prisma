// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}


model User {
  id            String  @id @default(cuid())
  email         String  @unique
  passwordHash  String?
  accessTokens  AccessToken[]
  refreshTokens RefreshToken[]
  profile       Profile?
  streams       Stream[]

  Follower      Subscription[] @relation("follower")
  Author        Subscription[] @relation("author")

  @@map("users")
}

model AccessToken {
  id            String    @id @default(cuid())
  token         String
  expiresAt     DateTime
  user          User      @relation(fields: [user_id], references: [id])
  user_id       String

  @@map("auth_access_tokens")
}

model RefreshToken {
  id            String    @id @default(cuid())
  token         String
  expiresAt     DateTime
  user          User      @relation(fields: [user_id], references: [id])
  user_id       String

  @@map("auth_refresh_tokens")
}
  
model Profile {
  id                String      @id @default(cuid())
  fullname          String  
  username          String      @unique
  photo             String?
  phone             String?  
  location          String?  
  about             String?  
  availableForCall  Boolean     @default(false)
  user              User        @relation(fields: [userId], references: [id])
  userId            String      @unique
  categories        Category[]

  @@map("profiles")
}

model Category {
  id            String    @id @default(cuid())
  title         String
  profiles      Profile[]
  streams       Stream[]

  @@map("categories")
}

model Subscription {
  user_id       String
  subscriber_id String

  user          User    @relation("author", fields: [user_id], references: [id])
  subscriber    User    @relation("follower", fields: [subscriber_id], references: [id])

  @@id([user_id, subscriber_id])
  @@map("subscription")
}

model Stream {
  id            String    @id @default(cuid())
  title         String
  user_id       String
  user          User    @relation(fields: [user_id], references: [id])
  categories    Category[]
  preview       String?

  @@map("streams")
}
